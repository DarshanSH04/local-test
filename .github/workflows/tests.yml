name: Database Tests

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://npm.pkg.github.com'
      # Cache node_modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: modules${{ hashFiles('package-lock.json') }}
      - run: npm ci
      - run: npm install
      - run: npm run build
      # Upload only build artifacts
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v4
      # Cache node_modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: modules${{ hashFiles('package-lock.json') }}
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      # Set up Docker cache
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Cache OpenSearch Docker image
      - name: Cache OpenSearch Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/opensearch-cache
          key: opensearch-${{ hashFiles('src/opensearch/Dockerfile') }}

      # Cache PostgreSQL Docker image
      - name: Cache PostgreSQL Docker image
        uses: actions/cache@v4
        with:
          path: /tmp/postgres-cache
          key: postgres-${{ hashFiles('src/pgsql/Dockerfile') }}

      # Build or load OpenSearch image
      - name: Build/Load OpenSearch image
        run: |
          if [ -f /tmp/opensearch-cache/image.tar ]; then
            docker load < /tmp/opensearch-cache/image.tar
          else
            cd src/opensearch
            docker build -t opensearch-test .
            mkdir -p /tmp/opensearch-cache
            docker save opensearch-test > /tmp/opensearch-cache/image.tar
          fi

      # Build or load PostgreSQL image
      - name: Build/Load PostgreSQL image
        run: |
          if [ -f /tmp/postgres-cache/image.tar ]; then
            docker load < /tmp/postgres-cache/image.tar
          else
            cd src/pgsql
            docker build -t postgres-test .
            mkdir -p /tmp/postgres-cache
            docker save postgres-test > /tmp/postgres-cache/image.tar
          fi

      - name: Start OpenSearch container
        run: |
          docker run -d \
            -e "discovery.type=single-node" \
            -e "OPENSEARCH_INITIAL_ADMIN_PASSWORD=Password1!rohu656UHhhh" \
            -p 9200:9200 -p 9600:9600 \
            opensearch-test

      - name: Start PostgreSQL container
        run: |
          docker run -d \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -e POSTGRES_DB=local_db \
            -p 5432:5432 \
            postgres-test

      # Wait for services to be ready
      - name: Wait for services
        run: |
          timeout 60s bash -c '
          until curl -sf https://localhost:9200 -ku "admin:Password1!rohu656UHhhh"; do
            echo "Waiting for OpenSearch..."
            sleep 5
          done
          until PGPASSWORD=postgres psql -h localhost -U postgres -d local_db -c "\l" > /dev/null 2>&1; do
            echo "Waiting for PostgreSQL..."
            sleep 5
          done'

      - name: Run DB tests
        run: npm run test